
public class Data {

/*
  Static arrays in support of MoveGen for category 1 pieces. Each array element represents
  the possible destination squares for a piece that occupoies the square denoted by the array
  index. 
*/

// piece/square tables, one for each piece type.

public static int[] wpv = 	{	0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 2, 2, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0	};

public static int[] wnv = 	{	0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 3, 0, 0, 3, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0	};

public static int[] wbv = 	{	0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 3, 0, 0, 3, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0	};

public static int[] wrv = 	{	0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 2, 2, 0, 0, 0	};

public static int[] wqv = 	{	0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 2, 2, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0	};

public static int[] wkv = 	{	0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 3, 0, 0, 0, 3, 0	};
								
public static int[] bpv = 	{	0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0,-2,-2, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0	};

public static int[] bnv = 	{	0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0,
								0, 0,-3, 0, 0,-3, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0	};

public static int[] bbv = 	{	0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0,
								0, 0,-3, 0, 0,-3, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0	};

public static int[] brv = 	{	0, 0, 0,-2,-2, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0	};

public static int[] bqv = 	{	0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0,-2,-2, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0	};

public static int[] bkv = 	{	0, 0,-3, 0, 0, 0,-3, 0,
								0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0,
								0, 0, 0, 0, 0, 0, 0, 0	};

public static int[][] P = 
{
{ -1 },
{ -1 },
{ -1 },
{ -1 },
{ -1 },
{ -1 },
{ -1 },
{ -1 },
{ 0, 1 },			// P[8]
{ 0, 1, 2 },		// P[9]
{ 1, 2, 3 },		// P[10]
{ 2, 3, 4 },		// P[11]
{ 3, 4, 5 },		// P[12]
{ 4, 5, 6 },		// P[13]
{ 5, 6, 7 },		// P[14]
{ 7, 6 },			// P[15]
{ 8, 9 },			// P[16]
{ 8, 9, 10 },		// P[17]
{ 9, 10, 11 },		// P[18]
{ 10, 11, 12 },		// P[19]
{ 11, 12, 13 },		// P[20]
{ 12, 13, 14 },		// P[21]
{ 13, 14, 15 },		// P[22]
{ 15, 14 },			// P[23]
{ 16, 17 },			// P[24]
{ 16, 17, 18 },		// P[25]
{ 17, 18, 19 },		// P[26]
{ 18, 19, 20 },		// P[27]
{ 19, 20, 21 },		// P[28]
{ 20, 21, 22 },		// P[29]
{ 21, 22, 23 },		// P[30]
{ 23, 22 },			// P[31]
{ 24, 25 },			// P[32]
{ 24, 25, 26 },		// P[33]
{ 25, 26, 27 },		// P[34]
{ 26, 27, 28 },		// P[35]
{ 27, 28, 29 },		// P[36]
{ 28, 29, 30 },		// P[37]
{ 29, 30, 31 },		// P[38]
{ 31, 30 },			// P[39]
{ 32, 33 },			// P[40]
{ 32, 33, 34 },		// P[41]
{ 33, 34, 35 },		// P[42]
{ 34, 35, 36 },		// P[43]
{ 35, 36, 37 },		// P[44]
{ 36, 37, 38 },		// P[45]
{ 37, 38, 39 },		// P[46]
{ 39, 38 },			// P[47]
{ 32, 40, 41 },		// P[48]
{ 33, 40, 41, 42 },	// P[49]
{ 34, 41, 42, 43 },	// P[50]
{ 35, 42, 43, 44 },	// P[51]
{ 36, 43, 44, 45 },	// P[52]
{ 37, 44, 45, 46 },	// P[53]
{ 38, 45, 46, 47 },	// P[54]
{ 39, 47, 46 },		// P[55]
{ -1 },
{ -1 },
{ -1 },
{ -1 },
{ -1 },
{ -1 },
{ -1 },
{ -1 }
};

public static int[][] p = 
{
{ -1 },
{ -1 },
{ -1 },
{ -1 },
{ -1 },
{ -1 },
{ -1 },
{ -1 },
{ 24, 16, 17 },		// p[8]
{ 25, 16, 17, 18 },	// p[9]
{ 26, 17, 18, 19 },	// p[10]
{ 27, 18, 19, 20 },	// p[11]
{ 28, 19, 20, 21 },	// p[12]
{ 29, 20, 21, 22 },	// p[13]
{ 30, 21, 22, 23 },	// p[14]
{ 31, 23, 22 },		// p[15]
{ 24, 25 },			// p[16]
{ 24, 25, 26 },		// p[17]
{ 25, 26, 27 },		// p[18]
{ 26, 27, 28 },		// p[19]
{ 27, 28, 29 },		// p[20]
{ 28, 29, 30 },		// p[21]
{ 29, 30, 31 },		// p[22]
{ 31, 30 },			// p[23]
{ 32, 33 },			// p[24]
{ 32, 33, 34 },		// p[25]
{ 33, 34, 35 },		// p[26]
{ 34, 35, 36 },		// p[27]
{ 35, 36, 37 },		// p[28]
{ 36, 37, 38 },		// p[29]
{ 37, 38, 39 },		// p[30]
{ 39, 38 },			// p[31]
{ 40, 41 },			// p[32]
{ 40, 41, 42 },		// p[33]
{ 41, 42, 43 },		// p[34]
{ 42, 43, 44 },		// p[35]
{ 43, 44, 45 },		// p[36]
{ 44, 45, 46 },		// p[37]
{ 45, 46, 47 },		// p[38]
{ 47, 46 },			// p[39]
{ 48, 49 },			// p[40]
{ 48, 49, 50 },		// p[41]
{ 49, 50, 51 },		// p[42]
{ 50, 51, 52 },		// p[43]
{ 51, 52, 53 },		// p[44]
{ 52, 53, 54 },		// p[45]
{ 53, 54, 55 },		// p[46]
{ 55, 54 },			// p[47]
{ 56, 57 },			// p[48]
{ 56, 57, 58 },		// p[49]
{ 57, 58, 59 },		// p[50]
{ 58, 59, 60 },		// p[51]
{ 59, 60, 61 },		// p[52]
{ 60, 61, 62 },		// p[53]
{ 61, 62, 63 },		// p[54]
{ 62, 63 },			// p[55]
{ -1 },
{ -1 },
{ -1 },
{ -1 },
{ -1 },
{ -1 },
{ -1 },
{ -1 }
};

public static int k[][] = 
{
{ 1, 8, 9 },						// k[0]
{ 0, 2, 8, 9, 10 },					// k[1]
{ 1, 3, 9, 10, 11 },				// k[2]
{ 2, 4, 10, 11, 12 },				// k[3]
{ 3, 5, 11, 12, 13, 6, 2 },			// k[4]
{ 4, 6, 12, 13, 14 },				// k[5]
{ 5, 7, 13, 14, 15 },				// k[6]
{ 6, 14, 15 },						// k[7]
{ 0, 1, 9, 16, 17 },				// k[8]
{ 0, 1, 2, 8, 10, 16, 17, 18 },		// k[9]
{ 1, 2, 3, 9, 11, 17, 18, 19 },		// k[10]
{ 2, 3, 4, 10, 12, 18, 19, 20 },	// k[11]
{ 3, 4, 5, 11, 13, 19, 20, 21 },	// k[12]
{ 4, 5, 6, 12, 14, 20, 21, 22 },	// k[13]
{ 5, 6, 7, 13, 15, 21, 22, 23 },	// k[14]
{ 6, 7, 14, 22, 23 },				// k[15]
{ 8, 9, 17, 24, 25 },				// k[16]
{ 8, 9, 10, 16, 18, 24, 25, 26 },	// k[17]
{ 9, 10, 11, 17, 19, 25, 26, 27 },	// k[18]
{ 10, 11, 12, 18, 20, 26, 27, 28 },	// k[19]
{ 11, 12, 13, 19, 21, 27, 28, 29 },	// k[20]
{ 12, 13, 14, 20, 22, 28, 29, 30 },	// k[21]
{ 13, 14, 15, 21, 23, 29, 30, 31 },	// k[22]
{ 14, 15, 22, 30, 31 },				// k[23]
{ 16, 17, 25, 32, 33 },				// k[24]
{ 16, 17, 18, 24, 26, 32, 33, 34 },	// k[25]
{ 17, 18, 19, 25, 27, 33, 34, 35 },	// k[26]
{ 18, 19, 20, 26, 28, 34, 35, 36 },	// k[27]
{ 19, 20, 21, 27, 29, 35, 36, 37 },	// k[28]
{ 20, 21, 22, 28, 30, 36, 37, 38 },	// k[29]
{ 21, 22, 23, 29, 31, 37, 38, 39 },	// k[30]
{ 22, 23, 30, 38, 39 },				// k[31]
{ 24, 25, 33, 40, 41 },				// k[32]
{ 24, 25, 26, 32, 34, 40, 41, 42 },	// k[33]
{ 25, 26, 27, 33, 35, 41, 42, 43 },	// k[34]
{ 26, 27, 28, 34, 36, 42, 43, 44 },	// k[35]
{ 27, 28, 29, 35, 37, 43, 44, 45 },	// k[36]
{ 28, 29, 30, 36, 38, 44, 45, 46 },	// k[37]
{ 29, 30, 31, 37, 39, 45, 46, 47 },	// k[38]
{ 30, 31, 38, 46, 47 },				// k[39]
{ 32, 33, 41, 48, 49 },				// k[40]
{ 32, 33, 34, 40, 42, 48, 49, 50 },	// k[41]
{ 33, 34, 35, 41, 43, 49, 50, 51 },	// k[42]
{ 34, 35, 36, 42, 44, 50, 51, 52 },	// k[43]
{ 35, 36, 37, 43, 45, 51, 52, 53 },	// k[44]
{ 36, 37, 38, 44, 46, 52, 53, 54 },	// k[45]
{ 37, 38, 39, 45, 47, 53, 54, 55 },	// k[46]
{ 38, 39, 46, 54, 55 },				// k[47]
{ 40, 41, 49, 56, 57 },				// k[48]
{ 40, 41, 42, 48, 50, 56, 57, 58 },	// k[49]
{ 41, 42, 43, 49, 51, 57, 58, 59 },	// k[50]
{ 42, 43, 44, 50, 52, 58, 59, 60 },	// k[51]
{ 43, 44, 45, 51, 53, 59, 60, 61 },	// k[52]
{ 44, 45, 46, 52, 54, 60, 61, 62 },	// k[53]
{ 45, 46, 47, 53, 55, 61, 62, 63 },	// k[54]
{ 46, 47, 54, 62, 63 },				// k[55]
{ 48, 49, 57 },						// k[56]
{ 48, 49, 50, 56, 58 },				// k[57]
{ 49, 50, 51, 57, 59 },				// k[58]
{ 50, 51, 52, 58, 60 },				// k[59]
{ 51, 52, 53, 59, 61 },				// k[60]
{ 52, 53, 54, 60, 62 },				// k[61]
{ 53, 54, 55, 61, 63 },				// k[62]
{ 54, 55, 62 }						// k[63]
};

public static int K[][] = 
{
{ 1, 8, 9 },						// K[0]
{ 0, 2, 8, 9, 10 },					// K[1]
{ 1, 3, 9, 10, 11 },				// K[2]
{ 2, 4, 10, 11, 12 },				// K[3]
{ 3, 5, 11, 12, 13 },				// K[4]
{ 4, 6, 12, 13, 14 },				// K[5]
{ 5, 7, 13, 14, 15 },				// K[6]
{ 6, 14, 15 },						// K[7]
{ 0, 1, 9, 16, 17 },				// K[8]
{ 0, 1, 2, 8, 10, 16, 17, 18 },		// K[9]
{ 1, 2, 3, 9, 11, 17, 18, 19 },		// K[10]
{ 2, 3, 4, 10, 12, 18, 19, 20 },	// K[11]
{ 3, 4, 5, 11, 13, 19, 20, 21 },	// K[12]
{ 4, 5, 6, 12, 14, 20, 21, 22 },	// K[13]
{ 5, 6, 7, 13, 15, 21, 22, 23 },	// K[14]
{ 6, 7, 14, 22, 23 },				// K[15]
{ 8, 9, 17, 24, 25 },				// K[16]
{ 8, 9, 10, 16, 18, 24, 25, 26 },	// K[17]
{ 9, 10, 11, 17, 19, 25, 26, 27 },	// K[18]
{ 10, 11, 12, 18, 20, 26, 27, 28 },	// K[19]
{ 11, 12, 13, 19, 21, 27, 28, 29 },	// K[20]
{ 12, 13, 14, 20, 22, 28, 29, 30 },	// K[21]
{ 13, 14, 15, 21, 23, 29, 30, 31 },	// K[22]
{ 14, 15, 22, 30, 31 },				// K[23]
{ 16, 17, 25, 32, 33 },				// K[24]
{ 16, 17, 18, 24, 26, 32, 33, 34 },	// K[25]
{ 17, 18, 19, 25, 27, 33, 34, 35 },	// K[26]
{ 18, 19, 20, 26, 28, 34, 35, 36 },	// K[27]
{ 19, 20, 21, 27, 29, 35, 36, 37 },	// K[28]
{ 20, 21, 22, 28, 30, 36, 37, 38 },	// K[29]
{ 21, 22, 23, 29, 31, 37, 38, 39 },	// K[30]
{ 22, 23, 30, 38, 39 },				// K[31]
{ 24, 25, 33, 40, 41 },				// K[32]
{ 24, 25, 26, 32, 34, 40, 41, 42 },	// K[33]
{ 25, 26, 27, 33, 35, 41, 42, 43 },	// K[34]
{ 26, 27, 28, 34, 36, 42, 43, 44 },	// K[35]
{ 27, 28, 29, 35, 37, 43, 44, 45 },	// K[36]
{ 28, 29, 30, 36, 38, 44, 45, 46 },	// K[37]
{ 29, 30, 31, 37, 39, 45, 46, 47 },	// K[38]
{ 30, 31, 38, 46, 47 },				// K[39]
{ 32, 33, 41, 48, 49 },				// K[40]
{ 32, 33, 34, 40, 42, 48, 49, 50 },	// K[41]
{ 33, 34, 35, 41, 43, 49, 50, 51 },	// K[42]
{ 34, 35, 36, 42, 44, 50, 51, 52 },	// K[43]
{ 35, 36, 37, 43, 45, 51, 52, 53 },	// K[44]
{ 36, 37, 38, 44, 46, 52, 53, 54 },	// K[45]
{ 37, 38, 39, 45, 47, 53, 54, 55 },	// K[46]
{ 38, 39, 46, 54, 55 },				// K[47]
{ 40, 41, 49, 56, 57 },				// K[48]
{ 40, 41, 42, 48, 50, 56, 57, 58 },	// K[49]
{ 41, 42, 43, 49, 51, 57, 58, 59 },	// K[50]
{ 42, 43, 44, 50, 52, 58, 59, 60 },	// K[51]
{ 43, 44, 45, 51, 53, 59, 60, 61 },	// K[52]
{ 44, 45, 46, 52, 54, 60, 61, 62 },	// K[53]
{ 45, 46, 47, 53, 55, 61, 62, 63 },	// K[54]
{ 46, 47, 54, 62, 63 },				// K[55]
{ 48, 49, 57 },						// K[56]
{ 48, 49, 50, 56, 58 },				// K[57]
{ 49, 50, 51, 57, 59 },				// K[58]
{ 50, 51, 52, 58, 60 },				// K[59]
{ 51, 52, 53, 59, 61, 62, 58 },		// K[60]
{ 52, 53, 54, 60, 62 },				// K[61]
{ 53, 54, 55, 61, 63 },				// K[62]
{ 54, 55, 62 }						// K[63]
};

public static int[][] N = 
{
{ 10, 17 },							// n[0]
{ 11, 18, 16 },						// n[1]
{ 12, 8, 19, 17 },					// n[2]
{ 13, 9, 20, 18 },					// n[3]
{ 14, 10, 21, 19 },					// n[4]
{ 15, 11, 22, 20 },					// n[5]
{ 12, 23, 21 },						// n[6]
{ 13, 22 },							// n[7]
{ 18, 2, 25 },						// n[8]
{ 19, 3, 26, 24 },					// n[9]
{ 20, 16, 4, 0, 27, 25 },			// n[10]
{ 21, 17, 5, 1, 28, 26 },			// n[11]
{ 22, 18, 6, 2, 29, 27 },			// n[12]
{ 23, 19, 7, 3, 30, 28 },			// n[13]
{ 20, 4, 31, 29 },					// n[14]
{ 21, 5, 30 },						// n[15]
{ 26, 10, 33, 1 },					// n[16]
{ 27, 11, 34, 32, 2, 0 },			// n[17]
{ 28, 24, 12, 8, 35, 33, 3, 1 },	// n[18]
{ 29, 25, 13, 9, 36, 34, 4, 2 },	// n[19]
{ 30, 26, 14, 10, 37, 35, 5, 3 },	// n[20]
{ 31, 27, 15, 11, 38, 36, 6, 4 },	// n[21]
{ 28, 12, 39, 37, 7, 5 },			// n[22]
{ 29, 13, 38, 6 },					// n[23]
{ 34, 18, 41, 9 },					// n[24]
{ 35, 19, 42, 40, 10, 8 },			// n[25]
{ 36, 32, 20, 16, 43, 41, 11, 9 },	// n[26]
{ 37, 33, 21, 17, 44, 42, 12, 10 },	// n[27]
{ 38, 34, 22, 18, 45, 43, 13, 11 },	// n[28]
{ 39, 35, 23, 19, 46, 44, 14, 12 },	// n[29]
{ 36, 20, 47, 45, 15, 13 },			// n[30]
{ 37, 21, 46, 14 },					// n[31]
{ 42, 26, 49, 17 },					// n[32]
{ 43, 27, 50, 48, 18, 16 },			// n[33]
{ 44, 40, 28, 24, 51, 49, 19, 17 },	// n[34]
{ 45, 41, 29, 25, 52, 50, 20, 18 },	// n[35]
{ 46, 42, 30, 26, 53, 51, 21, 19 },	// n[36]
{ 47, 43, 31, 27, 54, 52, 22, 20 },	// n[37]
{ 44, 28, 55, 53, 23, 21 },			// n[38]
{ 45, 29, 54, 22 },					// n[39]
{ 50, 34, 57, 25 },					// n[40]
{ 51, 35, 58, 56, 26, 24 },			// n[41]
{ 52, 48, 36, 32, 59, 57, 27, 25 },	// n[42]
{ 53, 49, 37, 33, 60, 58, 28, 26 },	// n[43]
{ 54, 50, 38, 34, 61, 59, 29, 27 },	// n[44]
{ 55, 51, 39, 35, 62, 60, 30, 28 },	// n[45]
{ 52, 36, 63, 61, 31, 29 },			// n[46]
{ 53, 37, 62, 30 },					// n[47]
{ 58, 42, 33 },						// n[48]
{ 59, 43, 34, 32 },					// n[49]
{ 60, 56, 44, 40, 35, 33 },			// n[50]
{ 61, 57, 45, 41, 36, 34 },			// n[51]
{ 62, 58, 46, 42, 37, 35 },			// n[52]
{ 63, 59, 47, 43, 38, 36 },			// n[53]
{ 60, 44, 39, 37 },					// n[54]
{ 61, 45, 38 },						// n[55]
{ 50, 41 },							// n[56]
{ 51, 42, 40 },						// n[57]
{ 52, 48, 43, 41 },					// n[58]
{ 53, 49, 44, 42 },					// n[59]
{ 54, 50, 45, 43 },					// n[60]
{ 55, 51, 46, 44 },					// n[61]
{ 52, 47, 45 },						// n[62]
{ 53, 46 }							// n[63]
};

}